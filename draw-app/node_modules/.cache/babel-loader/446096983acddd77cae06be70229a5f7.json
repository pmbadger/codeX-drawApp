{"ast":null,"code":"import { ACTION_ADD_COMMAND_LINE, ACTION_SET_CANVAS_VALUE, ACTION_SET_REQUEST_ERROR } from \"./actionTypes\";\nexport const actionAddCommandLine = line => dispatch => {\n  fetch(\"http://localhost:3001/command\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    },\n    body: JSON.stringify({\n      line\n    }) // mode: \"no-cors\"\n\n  }).then(result => result.json().then(data => {\n    dispatch({\n      type: ACTION_ADD_COMMAND_LINE,\n      payload: line\n    });\n    dispatch(actionSetCanvasValue(data));\n  })).catch(err => actionSetRequestError(err.message));\n};\nexport const actionSetCanvasValue = data => {\n  return {\n    type: ACTION_SET_CANVAS_VALUE,\n    payload: data\n  };\n};\nexport const actionSetRequestError = error => {\n  return {\n    type: ACTION_SET_REQUEST_ERROR,\n    payload: error\n  };\n};","map":{"version":3,"sources":["D:/codeX/draw-app/src/store/actions/commands.js"],"names":["ACTION_ADD_COMMAND_LINE","ACTION_SET_CANVAS_VALUE","ACTION_SET_REQUEST_ERROR","actionAddCommandLine","line","dispatch","fetch","method","headers","body","JSON","stringify","then","result","json","data","type","payload","actionSetCanvasValue","catch","err","actionSetRequestError","message","error"],"mappings":"AAAA,SAASA,uBAAT,EAAkCC,uBAAlC,EAA2DC,wBAA3D,QAA2F,eAA3F;AAEA,OAAO,MAAMC,oBAAoB,GAAGC,IAAI,IAAIC,QAAQ,IAAI;AACtDC,EAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCC,IAAAA,MAAM,EAAE,MAD6B;AAErCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAF4B;AAKrCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA;AAAD,KAAf,CAL+B,CAMrC;;AANqC,GAAlC,CAAL,CAQGQ,IARH,CAQQC,MAAM,IACVA,MAAM,CAACC,IAAP,GAAcF,IAAd,CAAmBG,IAAI,IAAI;AACzBV,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAEhB,uBADC;AAEPiB,MAAAA,OAAO,EAAEb;AAFF,KAAD,CAAR;AAIAC,IAAAA,QAAQ,CAACa,oBAAoB,CAACH,IAAD,CAArB,CAAR;AACD,GAND,CATJ,EAiBGI,KAjBH,CAiBSC,GAAG,IAAIC,qBAAqB,CAACD,GAAG,CAACE,OAAL,CAjBrC;AAkBD,CAnBM;AAsBP,OAAO,MAAMJ,oBAAoB,GAAIH,IAAD,IAAU;AAC5C,SAAO;AACLC,IAAAA,IAAI,EAAEf,uBADD;AAELgB,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMM,qBAAqB,GAAIE,KAAD,IAAW;AAC9C,SAAO;AACLP,IAAAA,IAAI,EAAEd,wBADD;AAELe,IAAAA,OAAO,EAAEM;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { ACTION_ADD_COMMAND_LINE, ACTION_SET_CANVAS_VALUE, ACTION_SET_REQUEST_ERROR } from \"./actionTypes\";\r\n\r\nexport const actionAddCommandLine = line => dispatch => {  \r\n  fetch(\"http://localhost:3001/command\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json;charset=utf-8\"\r\n    },\r\n    body: JSON.stringify({line}),\r\n    // mode: \"no-cors\"\r\n  })\r\n    .then(result =>\r\n      result.json().then(data => {\r\n        dispatch({\r\n          type: ACTION_ADD_COMMAND_LINE,\r\n          payload: line\r\n        });\r\n        dispatch(actionSetCanvasValue(data));\r\n      }),\r\n    )\r\n    .catch(err => actionSetRequestError(err.message));\r\n};\r\n\r\n\r\nexport const actionSetCanvasValue = (data) => {\r\n  return {\r\n    type: ACTION_SET_CANVAS_VALUE,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const actionSetRequestError = (error) => {\r\n  return {\r\n    type: ACTION_SET_REQUEST_ERROR,\r\n    payload: error\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}