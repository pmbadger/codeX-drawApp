{"ast":null,"code":"import _slicedToArray from \"D:\\\\codeX\\\\draw-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\codeX\\\\draw-app\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Canvas } from \"./components/Canvas\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionAddInputLine, actionAddLine } from \"./store/actions/lines\";\nimport { actionChangeCanvas } from \"./store/actions/canvas\";\nimport { actionAddInputRectangle } from \"./store/actions/rectangles\";\nimport \"./App.css\";\nexport const App = () => {\n  const dispatch = useDispatch();\n\n  const addInputLine = () => dispatch(actionAddInputLine(null));\n\n  const addInputRectangle = () => dispatch(actionAddInputRectangle(null));\n\n  const changeCanvas = ({\n    width,\n    height\n  }) => dispatch(actionChangeCanvas({\n    width,\n    height\n  }));\n\n  const addLine = () => dispatch(actionAddLine());\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        widthCanvas = _useState2[0],\n        setWidthCanvas = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        heightCanvas = _useState4[0],\n        setHeightCanvas = _useState4[1];\n\n  useEffect(() => {\n    changeCanvas({\n      width: widthCanvas,\n      height: heightCanvas\n    });\n  }, [widthCanvas, heightCanvas]);\n\n  const onChangeTextArea = str => {\n    if (str[str.length - 1] === \"\\n\") console.log(\"ok\");\n  }; // alert(document.body.clientWidth-250-25)\n\n\n  return React.createElement(\"div\", {\n    className: \"main-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"inputes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Draw app\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Create your picture\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Enter size of canvas, x\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Width\",\n    onChange: e => setWidthCanvas(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Height\",\n    onChange: e => setHeightCanvas(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"textarea\", {\n    type: \"text\",\n    placeholder: \"Enter commands\",\n    onChange: e => onChangeTextArea(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), widthCanvas !== \"\" && heightCanvas !== \"\" ? React.createElement(Canvas, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }) : null);\n};","map":{"version":3,"sources":["D:/codeX/draw-app/src/App.js"],"names":["React","useState","useEffect","Canvas","useSelector","useDispatch","actionAddInputLine","actionAddLine","actionChangeCanvas","actionAddInputRectangle","App","dispatch","addInputLine","addInputRectangle","changeCanvas","width","height","addLine","widthCanvas","setWidthCanvas","heightCanvas","setHeightCanvas","onChangeTextArea","str","length","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Canvas } from \"./components/Canvas\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionAddInputLine, actionAddLine } from \"./store/actions/lines\";\nimport { actionChangeCanvas } from \"./store/actions/canvas\";\nimport { actionAddInputRectangle } from \"./store/actions/rectangles\";\n\nimport \"./App.css\";\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const addInputLine = () => dispatch(actionAddInputLine(null));\n  const addInputRectangle = () => dispatch(actionAddInputRectangle(null));\n  const changeCanvas = ({ width, height }) =>\n    dispatch(actionChangeCanvas({ width, height }));\n  const addLine= () => dispatch(actionAddLine());\n  \n  const [widthCanvas, setWidthCanvas] = useState(\"\");\n  const [heightCanvas, setHeightCanvas] = useState(\"\");\n\n  useEffect(() => {\n    changeCanvas({ width: widthCanvas, height: heightCanvas });\n  }, [widthCanvas, heightCanvas]);\n\n  const onChangeTextArea = (str) => {\n    if(str[str.length-1]===\"\\n\")\n    console.log(\"ok\");\n    \n  }\n\n  // alert(document.body.clientWidth-250-25)\n\n  return (\n    <div className=\"main-body\">\n      <div className=\"inputes\">\n        <h1>Draw app</h1>\n        <p>Create your picture</p>\n        <p>Enter size of canvas, x</p>\n        <input\n          type=\"text\"\n          placeholder=\"Width\"\n          onChange={e => setWidthCanvas(e.target.value)}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"Height\"\n          onChange={e => setHeightCanvas(e.target.value)}\n        ></input>\n        <textarea type=\"text\" placeholder='Enter commands' onChange={(e) => onChangeTextArea(e.target.value)}></textarea>\n      </div>\n      {widthCanvas !== \"\" && heightCanvas !== \"\" ? (\n        <Canvas />\n      ) : null}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}