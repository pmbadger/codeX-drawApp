{"ast":null,"code":"import _defineProperty from \"D:\\\\codeX\\\\draw-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ACTION_ADD_COMMAND_LINE, ACTION_CHANGE_CANVAS_HEIGHT, ACTION_CHANGE_CANVAS_WIDTH } from \"../actions/actionTypes\";\nconst initialState = {\n  commands: [],\n  lines: [],\n  rectanglesInput: [],\n  canvas: {\n    width: 0,\n    height: 0\n  }\n};\nexport const figureReduser = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_ADD_COMMAND_LINE:\n      return _objectSpread({}, state, {\n        commands: [...state.commands, action.payload]\n      });\n\n    case ACTION_CHANGE_CANVAS_WIDTH:\n      return _objectSpread({}, state, {\n        canvas: _objectSpread({}, state.canvas, {\n          width: action.payload.width\n        })\n      });\n\n    case ACTION_CHANGE_CANVAS_HEIGHT:\n      return _objectSpread({}, state, {\n        canvas: _objectSpread({}, state.canvas, {\n          height: action.payload.height\n        })\n      });\n\n    default:\n      {\n        \"\";\n        return _objectSpread({}, state);\n      }\n  }\n};","map":{"version":3,"sources":["D:/codeX/draw-app/src/store/reducers/reducer.js"],"names":["ACTION_ADD_COMMAND_LINE","ACTION_CHANGE_CANVAS_HEIGHT","ACTION_CHANGE_CANVAS_WIDTH","initialState","commands","lines","rectanglesInput","canvas","width","height","figureReduser","state","action","type","payload"],"mappings":";;;;;;AAAA,SACEA,uBADF,EAEEC,2BAFF,EAGEC,0BAHF,QAIO,wBAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,eAAe,EAAE,EAHE;AAInBC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,MAAM,EAAE;AAApB;AAJW,CAArB;AAOA,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,uBAAL;AACE,+BAAYW,KAAZ;AAAmBP,QAAAA,QAAQ,EAAE,CAAC,GAAGO,KAAK,CAACP,QAAV,EAAoBQ,MAAM,CAACE,OAA3B;AAA7B;;AACF,SAAKZ,0BAAL;AACE,+BACKS,KADL;AAEEJ,QAAAA,MAAM,oBAAOI,KAAK,CAACJ,MAAb;AAAqBC,UAAAA,KAAK,EAAEI,MAAM,CAACE,OAAP,CAAeN;AAA3C;AAFR;;AAIA,SAAKP,2BAAL;AACE,+BACKU,KADL;AAEEJ,QAAAA,MAAM,oBAAOI,KAAK,CAACJ,MAAb;AAAqBE,UAAAA,MAAM,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAA5C;AAFR;;AAIJ;AAAS;AAAC;AACR,iCACKE,KADL;AAGD;AAjBH;AAmBD,CApBM","sourcesContent":["import {\r\n  ACTION_ADD_COMMAND_LINE,\r\n  ACTION_CHANGE_CANVAS_HEIGHT,\r\n  ACTION_CHANGE_CANVAS_WIDTH,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  commands: [],\r\n  lines: [],\r\n  rectanglesInput: [],\r\n  canvas: { width: 0, height: 0 },\r\n};\r\n\r\nexport const figureReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION_ADD_COMMAND_LINE:\r\n      return { ...state, commands: [...state.commands, action.payload] };\r\n    case ACTION_CHANGE_CANVAS_WIDTH:\r\n      return {\r\n        ...state,\r\n        canvas: { ...state.canvas, width: action.payload.width, }\r\n      };\r\n      case ACTION_CHANGE_CANVAS_HEIGHT:\r\n        return {\r\n          ...state,\r\n          canvas: { ...state.canvas, height: action.payload.height }\r\n        };\r\n    default: {``\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}