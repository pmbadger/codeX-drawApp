{"ast":null,"code":"import _slicedToArray from \"D:\\\\codeX\\\\draw-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\codeX\\\\draw-app\\\\src\\\\components\\\\Inputes.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { DoneCommands } from \"./DoneCommands\";\nimport { actionAddCommandLine } from \"../store/actions/commands\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreateCanvas } from \"../store/actions/canvas\";\nexport const Inputes = () => {\n  const dispatch = useDispatch();\n\n  const createCanvas = ({\n    widthCanvas,\n    heightCanvas\n  }) => dispatch(actionCreateCanvas({\n    widthCanvas,\n    heightCanvas\n  }));\n\n  const addCommandLine = line => dispatch(actionAddCommandLine(line));\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        valueTextArea = _useState2[0],\n        setValueTextArea = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        widthCanvas = _useState4[0],\n        setWidthCanvas = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        heightCanvas = _useState6[0],\n        setHeightCanvas = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        widthCanvasError = _useState8[0],\n        setWidthCanvasError = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        heightCanvasError = _useState10[0],\n        setHeightCanvasError = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        mainError = _useState12[0],\n        setMainError = _useState12[1];\n\n  const _useSelector = useSelector(state => state),\n        error = _useSelector.error;\n\n  const _useSelector2 = useSelector(state => state),\n        canvas = _useSelector2.canvas;\n\n  const onChangeTextArea = str => {\n    if (str[str.length - 1] === \"\\n\") {\n      addCommandLine(str);\n      console.log(str);\n      str = \"\";\n    }\n\n    setValueTextArea(str);\n  };\n\n  const validateWidthCanvas = ({\n    widthCanvas\n  }) => {\n    const regExp = /^\\d+$/;\n\n    if (!regExp.test(widthCanvas)) {\n      setWidthCanvasError(\"Enter only digits\");\n    } else if (widthCanvas === \"0\") {\n      setWidthCanvasError(\"Width can't be 0\");\n    } else setWidthCanvasError(\"\");\n  };\n\n  const validateHeightCanvas = ({\n    heightCanvas\n  }) => {\n    const regExp = /^\\d+$/;\n\n    if (!regExp.test(heightCanvas)) {\n      setHeightCanvasError(\"Enter only digits\");\n    } else if (heightCanvas === \"0\") {\n      setHeightCanvasError(\"Height can't be 0\");\n    } else setHeightCanvasError(\"\");\n  };\n\n  useEffect(() => {\n    validateWidthCanvas({\n      widthCanvas\n    });\n  }, [widthCanvas]);\n  useEffect(() => {\n    validateHeightCanvas({\n      heightCanvas\n    });\n  }, [heightCanvas]);\n\n  const tryCreateCanvas = ({\n    widthCanvas,\n    heightCanvas\n  }) => {\n    if (widthCanvas !== \"\" && heightCanvas !== \"\" && widthCanvasError === \"\" && heightCanvasError === \"\") {\n      console.log(\"\".concat(widthCanvas, \", \").concat(heightCanvas));\n      setMainError(\"\");\n      createCanvas({\n        widthCanvas,\n        heightCanvas\n      });\n    } else {\n      setMainError(\"Bad input\");\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"inputes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Draw app\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Create your picture\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Enter size of canvas\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Width\",\n    onChange: e => setWidthCanvas(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, widthCanvasError), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Height\",\n    onChange: e => setHeightCanvas(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, heightCanvasError), React.createElement(\"button\", {\n    className: \"create-canvas\",\n    onClick: () => tryCreateCanvas({\n      widthCanvas,\n      heightCanvas\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Create\"), React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, mainError), canvas.width !== 0 && React.createElement(\"textarea\", {\n    type: \"text\",\n    placeholder: \"Enter commands\",\n    value: valueTextArea,\n    onChange: e => onChangeTextArea(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, error), React.createElement(DoneCommands, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["D:/codeX/draw-app/src/components/Inputes.js"],"names":["React","useState","useEffect","DoneCommands","actionAddCommandLine","useSelector","useDispatch","actionCreateCanvas","Inputes","dispatch","createCanvas","widthCanvas","heightCanvas","addCommandLine","line","valueTextArea","setValueTextArea","setWidthCanvas","setHeightCanvas","widthCanvasError","setWidthCanvasError","heightCanvasError","setHeightCanvasError","mainError","setMainError","state","error","canvas","onChangeTextArea","str","length","console","log","validateWidthCanvas","regExp","test","validateHeightCanvas","tryCreateCanvas","e","target","value","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { DoneCommands } from \"./DoneCommands\";\r\nimport { actionAddCommandLine } from \"../store/actions/commands\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { actionCreateCanvas } from \"../store/actions/canvas\"\r\n\r\nexport const Inputes = () => {\r\n  const dispatch = useDispatch();\r\n  const createCanvas = ({ widthCanvas, heightCanvas }) => dispatch(actionCreateCanvas({ widthCanvas, heightCanvas }));\r\n  const addCommandLine = line => dispatch(actionAddCommandLine(line));\r\n  const [valueTextArea, setValueTextArea] = useState(\"\");\r\n  const [widthCanvas, setWidthCanvas] = useState(\"\");\r\n  const [heightCanvas, setHeightCanvas] = useState(\"\");\r\n  const [widthCanvasError, setWidthCanvasError] = useState(\"\");\r\n  const [heightCanvasError, setHeightCanvasError] = useState(\"\");\r\n  const [mainError, setMainError] = useState(\"\");\r\n  const {error} = useSelector(state => state);\r\n  const { canvas } = useSelector(state => state);\r\n  \r\n\r\n  const onChangeTextArea = str => {\r\n    if (str[str.length - 1] === \"\\n\") {\r\n      addCommandLine(str);\r\n      console.log(str);\r\n      str = \"\";\r\n    }\r\n    setValueTextArea(str);\r\n  };\r\n\r\n  const validateWidthCanvas = ({ widthCanvas }) => {\r\n    const regExp = /^\\d+$/;\r\n      if (!regExp.test(widthCanvas)) {\r\n        setWidthCanvasError(\"Enter only digits\");\r\n      }\r\n        else if(widthCanvas === \"0\"){\r\n          setWidthCanvasError(\"Width can't be 0\")\r\n        }\r\n        else\r\n          setWidthCanvasError(\"\");\r\n  };\r\n\r\n  const validateHeightCanvas = ({ heightCanvas }) => {\r\n    const regExp = /^\\d+$/;\r\n      if (!regExp.test(heightCanvas)) {\r\n        setHeightCanvasError(\"Enter only digits\");\r\n      }\r\n        else if(heightCanvas === \"0\"){\r\n          setHeightCanvasError(\"Height can't be 0\")\r\n        } \r\n        else setHeightCanvasError(\"\");\r\n  };\r\n\r\n  useEffect(()=>{\r\n    validateWidthCanvas({widthCanvas})\r\n  },[widthCanvas])\r\n\r\n  useEffect(()=>{\r\n    validateHeightCanvas({heightCanvas})\r\n  },[heightCanvas])\r\n\r\n  const tryCreateCanvas = ({ widthCanvas, heightCanvas }) => {\r\n    if(widthCanvas!==\"\" && heightCanvas!==\"\" && widthCanvasError===\"\" && heightCanvasError===\"\"){\r\n      console.log(`${widthCanvas}, ${heightCanvas}`);\r\n      setMainError(\"\");\r\n      createCanvas({widthCanvas, heightCanvas});\r\n    }\r\n    else{\r\n      setMainError(\"Bad input\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"inputes\">\r\n      <h1>Draw app</h1>\r\n      <p>Create your picture</p>\r\n      <p>Enter size of canvas</p>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Width\"\r\n        onChange={e => setWidthCanvas(e.target.value)}\r\n      ></input>\r\n      <span className=\"error\">{widthCanvasError}</span>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Height\"\r\n        onChange={e => setHeightCanvas(e.target.value)}\r\n      ></input>\r\n       <span className=\"error\">{heightCanvasError}</span>\r\n      <button className=\"create-canvas\" onClick={()=>tryCreateCanvas({ widthCanvas, heightCanvas })}>Create</button>\r\n      <span className=\"error\">{mainError}</span>\r\n      {canvas.width!==0 && <textarea\r\n        type=\"text\"\r\n        placeholder=\"Enter commands\"\r\n        value={valueTextArea}\r\n        onChange={e => onChangeTextArea(e.target.value)}\r\n      ></textarea>}\r\n      <span className=\"error\">{error}</span>\r\n      <DoneCommands />\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}