{"ast":null,"code":"import { ACTION_CREATE_CANVAS } from \"./actionTypes\";\nimport { actionSetCanvasValue, actionSetRequestError, actionSetIsFetching } from \"./commands\";\nexport const actionCreateCanvas = ({\n  widthCanvas,\n  heightCanvas\n}) => dispatch => {\n  dispatch(actionSetIsFetching(true));\n  fetch(\"http://localhost:3001/createCanvas\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    },\n    body: JSON.stringify({\n      widthCanvas,\n      heightCanvas\n    }) // mode: \"no-cors\"\n\n  }).then(result => result.json().then(data => {\n    dispatch({\n      type: ACTION_CREATE_CANVAS,\n      payload: {\n        widthCanvas,\n        heightCanvas\n      }\n    });\n    dispatch(actionSetCanvasValue(data));\n    dispatch(actionSetIsFetching(false));\n    dispatch(actionSetRequestError(\"\"));\n  })).catch(err => {\n    dispatch(actionSetRequestError(\"Wrong command\"));\n    dispatch(actionSetIsFetching(false));\n  });\n};","map":{"version":3,"sources":["D:/code/draw-app/src/store/actions/canvas.js"],"names":["ACTION_CREATE_CANVAS","actionSetCanvasValue","actionSetRequestError","actionSetIsFetching","actionCreateCanvas","widthCanvas","heightCanvas","dispatch","fetch","method","headers","body","JSON","stringify","then","result","json","data","type","payload","catch","err"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,eAArC;AACA,SACEC,oBADF,EAEEC,qBAFF,EAGEC,mBAHF,QAIO,YAJP;AAMA,OAAO,MAAMC,kBAAkB,GAAG,CAAC;AACjCC,EAAAA,WADiC;AAEjCC,EAAAA;AAFiC,CAAD,KAG5BC,QAAQ,IAAI;AAChBA,EAAAA,QAAQ,CAACJ,mBAAmB,CAAC,IAAD,CAApB,CAAR;AACAK,EAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,IAAAA,MAAM,EAAE,MADkC;AAE1CC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFiC;AAK1CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAER,MAAAA,WAAF;AAAeC,MAAAA;AAAf,KAAf,CALoC,CAM1C;;AAN0C,GAAvC,CAAL,CAQGQ,IARH,CAQQC,MAAM,IACVA,MAAM,CAACC,IAAP,GAAcF,IAAd,CAAmBG,IAAI,IAAI;AACzBV,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAElB,oBADC;AAEPmB,MAAAA,OAAO,EAAE;AAAEd,QAAAA,WAAF;AAAeC,QAAAA;AAAf;AAFF,KAAD,CAAR;AAIAC,IAAAA,QAAQ,CAACN,oBAAoB,CAACgB,IAAD,CAArB,CAAR;AACAV,IAAAA,QAAQ,CAACJ,mBAAmB,CAAC,KAAD,CAApB,CAAR;AACAI,IAAAA,QAAQ,CAACL,qBAAqB,CAAC,EAAD,CAAtB,CAAR;AACD,GARD,CATJ,EAmBGkB,KAnBH,CAmBSC,GAAG,IAAI;AACZd,IAAAA,QAAQ,CAACL,qBAAqB,CAAC,eAAD,CAAtB,CAAR;AACAK,IAAAA,QAAQ,CAACJ,mBAAmB,CAAC,KAAD,CAApB,CAAR;AACD,GAtBH;AAuBD,CA5BM","sourcesContent":["import { ACTION_CREATE_CANVAS } from \"./actionTypes\";\r\nimport {\r\n  actionSetCanvasValue,\r\n  actionSetRequestError,\r\n  actionSetIsFetching\r\n} from \"./commands\";\r\n\r\nexport const actionCreateCanvas = ({\r\n  widthCanvas,\r\n  heightCanvas\r\n}) => dispatch => {\r\n  dispatch(actionSetIsFetching(true));\r\n  fetch(\"http://localhost:3001/createCanvas\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json;charset=utf-8\"\r\n    },\r\n    body: JSON.stringify({ widthCanvas, heightCanvas })\r\n    // mode: \"no-cors\"\r\n  })\r\n    .then(result =>\r\n      result.json().then(data => {\r\n        dispatch({\r\n          type: ACTION_CREATE_CANVAS,\r\n          payload: { widthCanvas, heightCanvas }\r\n        });\r\n        dispatch(actionSetCanvasValue(data));\r\n        dispatch(actionSetIsFetching(false));\r\n        dispatch(actionSetRequestError(\"\"));\r\n      })\r\n    )\r\n    .catch(err => {\r\n      dispatch(actionSetRequestError(\"Wrong command\"));\r\n      dispatch(actionSetIsFetching(false));\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}