{"ast":null,"code":"import _slicedToArray from \"D:\\\\codeX\\\\draw-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\codeX\\\\draw-app\\\\src\\\\components\\\\Inputes.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Loading from \"react-loading-spinner\";\nimport \"react-loading-spinner/src/css/index.css\";\nimport { DoneCommands } from \"./DoneCommands\";\nimport { actionAddCommandLine } from \"../store/actions/commands\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreateCanvas } from \"../store/actions/canvas\";\nimport { actionFileToFile } from \"../store/actions/file\";\nexport const Inputes = () => {\n  const dispatch = useDispatch();\n\n  const createCanvas = ({\n    widthCanvas,\n    heightCanvas\n  }) => dispatch(actionCreateCanvas({\n    widthCanvas,\n    heightCanvas\n  })); // const getFile = () => dispatch(actionFileToFile());\n\n\n  const addCommandLine = line => dispatch(actionAddCommandLine(line));\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        valueTextArea = _useState2[0],\n        setValueTextArea = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        widthCanvas = _useState4[0],\n        setWidthCanvas = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        heightCanvas = _useState6[0],\n        setHeightCanvas = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        widthCanvasError = _useState8[0],\n        setWidthCanvasError = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        heightCanvasError = _useState10[0],\n        setHeightCanvasError = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        mainError = _useState12[0],\n        setMainError = _useState12[1];\n\n  const _useSelector = useSelector(state => state),\n        error = _useSelector.error,\n        canvas = _useSelector.canvas,\n        isFetching = _useSelector.isFetching;\n\n  const onChangeTextArea = str => {\n    if (str[str.length - 1] === \"\\n\") {\n      addCommandLine(str);\n      str = \"\";\n    }\n\n    setValueTextArea(str);\n  };\n\n  const getFile = () => {\n    fetch(\"http://localhost:3001/download\").then(result => result.blob().then(data => {\n      console.log(data);\n    }));\n  };\n\n  const validateWidthCanvas = ({\n    widthCanvas\n  }) => {\n    const regExp = /^\\d+$/;\n\n    if (!regExp.test(widthCanvas)) {\n      setWidthCanvasError(\"Enter only digits\");\n    } else if (widthCanvas === \"0\") {\n      setWidthCanvasError(\"Width can't be 0\");\n    } else setWidthCanvasError(\"\");\n  };\n\n  const validateHeightCanvas = ({\n    heightCanvas\n  }) => {\n    const regExp = /^\\d+$/;\n\n    if (!regExp.test(heightCanvas)) {\n      setHeightCanvasError(\"Enter only digits\");\n    } else if (heightCanvas === \"0\") {\n      setHeightCanvasError(\"Height can't be 0\");\n    } else setHeightCanvasError(\"\");\n  };\n\n  useEffect(() => {\n    validateWidthCanvas({\n      widthCanvas\n    });\n  }, [widthCanvas]);\n  useEffect(() => {\n    validateHeightCanvas({\n      heightCanvas\n    });\n  }, [heightCanvas]);\n\n  const tryCreateCanvas = ({\n    widthCanvas,\n    heightCanvas\n  }) => {\n    if (widthCanvas !== \"\" && heightCanvas !== \"\" && widthCanvasError === \"\" && heightCanvasError === \"\") {\n      setMainError(\"\");\n      createCanvas({\n        widthCanvas,\n        heightCanvas\n      });\n    } else {\n      setMainError(\"Bad input\");\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"inputes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Draw app\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Create your picture\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Enter size of canvas\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Width\",\n    onChange: e => setWidthCanvas(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, widthCanvasError), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Height\",\n    onChange: e => setHeightCanvas(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, heightCanvasError), React.createElement(\"button\", {\n    onClick: () => tryCreateCanvas({\n      widthCanvas,\n      heightCanvas\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Create\"), React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, mainError), React.createElement(\"button\", {\n    onClick: getFile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"File->File\"), canvas.width !== 0 && React.createElement(\"textarea\", {\n    type: \"text\",\n    placeholder: \"Enter commands\",\n    value: valueTextArea,\n    onChange: e => onChangeTextArea(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, error), React.createElement(Loading, {\n    isLoading: isFetching,\n    loadingClassName: \"loading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(DoneCommands, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["D:/codeX/draw-app/src/components/Inputes.js"],"names":["React","useState","useEffect","Loading","DoneCommands","actionAddCommandLine","useSelector","useDispatch","actionCreateCanvas","actionFileToFile","Inputes","dispatch","createCanvas","widthCanvas","heightCanvas","addCommandLine","line","valueTextArea","setValueTextArea","setWidthCanvas","setHeightCanvas","widthCanvasError","setWidthCanvasError","heightCanvasError","setHeightCanvasError","mainError","setMainError","state","error","canvas","isFetching","onChangeTextArea","str","length","getFile","fetch","then","result","blob","data","console","log","validateWidthCanvas","regExp","test","validateHeightCanvas","tryCreateCanvas","e","target","value","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Loading from \"react-loading-spinner\";\r\nimport \"react-loading-spinner/src/css/index.css\";\r\nimport { DoneCommands } from \"./DoneCommands\";\r\nimport { actionAddCommandLine } from \"../store/actions/commands\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { actionCreateCanvas } from \"../store/actions/canvas\";\r\nimport { actionFileToFile } from \"../store/actions/file\";\r\n\r\nexport const Inputes = () => {\r\n  const dispatch = useDispatch();\r\n  const createCanvas = ({ widthCanvas, heightCanvas }) =>\r\n    dispatch(actionCreateCanvas({ widthCanvas, heightCanvas }));\r\n  // const getFile = () => dispatch(actionFileToFile());\r\n  const addCommandLine = line => dispatch(actionAddCommandLine(line));\r\n  const [valueTextArea, setValueTextArea] = useState(\"\");\r\n  const [widthCanvas, setWidthCanvas] = useState(\"\");\r\n  const [heightCanvas, setHeightCanvas] = useState(\"\");\r\n  const [widthCanvasError, setWidthCanvasError] = useState(\"\");\r\n  const [heightCanvasError, setHeightCanvasError] = useState(\"\");\r\n  const [mainError, setMainError] = useState(\"\");\r\n  const { error, canvas, isFetching } = useSelector(state => state);\r\n\r\n  const onChangeTextArea = str => {\r\n    if (str[str.length - 1] === \"\\n\") {\r\n      addCommandLine(str);\r\n      str = \"\";\r\n    }\r\n    setValueTextArea(str);\r\n  };\r\n\r\n  const getFile = () => {\r\n    fetch(\"http://localhost:3001/download\").then((result)=>\r\n    result.blob().then((data)=>{\r\n      console.log(data);\r\n      \r\n    }));\r\n  }\r\n\r\n  const validateWidthCanvas = ({ widthCanvas }) => {\r\n    const regExp = /^\\d+$/;\r\n    if (!regExp.test(widthCanvas)) {\r\n      setWidthCanvasError(\"Enter only digits\");\r\n    } else if (widthCanvas === \"0\") {\r\n      setWidthCanvasError(\"Width can't be 0\");\r\n    } else setWidthCanvasError(\"\");\r\n  };\r\n\r\n  const validateHeightCanvas = ({ heightCanvas }) => {\r\n    const regExp = /^\\d+$/;\r\n    if (!regExp.test(heightCanvas)) {\r\n      setHeightCanvasError(\"Enter only digits\");\r\n    } else if (heightCanvas === \"0\") {\r\n      setHeightCanvasError(\"Height can't be 0\");\r\n    } else setHeightCanvasError(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    validateWidthCanvas({ widthCanvas });\r\n  }, [widthCanvas]);\r\n\r\n  useEffect(() => {\r\n    validateHeightCanvas({ heightCanvas });\r\n  }, [heightCanvas]);\r\n\r\n  const tryCreateCanvas = ({ widthCanvas, heightCanvas }) => {\r\n    if (\r\n      widthCanvas !== \"\" &&\r\n      heightCanvas !== \"\" &&\r\n      widthCanvasError === \"\" &&\r\n      heightCanvasError === \"\"\r\n    ) {\r\n      setMainError(\"\");\r\n      createCanvas({ widthCanvas, heightCanvas });\r\n    } else {\r\n      setMainError(\"Bad input\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"inputes\">\r\n      <h1>Draw app</h1>\r\n      <p>Create your picture</p>\r\n      <p>Enter size of canvas</p>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Width\"\r\n        onChange={e => setWidthCanvas(e.target.value)}\r\n      ></input>\r\n      <span className=\"error\">{widthCanvasError}</span>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Height\"\r\n        onChange={e => setHeightCanvas(e.target.value)}\r\n      ></input>\r\n      <span className=\"error\">{heightCanvasError}</span>\r\n      <button\r\n        onClick={() => tryCreateCanvas({ widthCanvas, heightCanvas })}\r\n      >\r\n        Create\r\n      </button>\r\n      <span className=\"error\">{mainError}</span>\r\n      <button\r\n        onClick={getFile}\r\n      >\r\n        File->File\r\n      </button>\r\n      {canvas.width !== 0 && (\r\n        <textarea\r\n          type=\"text\"\r\n          placeholder=\"Enter commands\"\r\n          value={valueTextArea}\r\n          onChange={e => onChangeTextArea(e.target.value)}\r\n        ></textarea>\r\n      )}\r\n      <span className=\"error\">{error}</span>\r\n      <Loading isLoading={isFetching} loadingClassName=\"loading\"></Loading>\r\n      <DoneCommands />\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}