{"ast":null,"code":"import _defineProperty from \"D:\\\\codeX\\\\draw-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ACTION_ADD_COMMAND_LINE, ACTION_SET_CANVAS_VALUE, ACTION_CREATE_CANVAS, ACTION_SET_REQUEST_ERROR } from \"../actions/actionTypes\";\nconst initialState = {\n  commands: [],\n  error: \"\",\n  canvas: {\n    width: 0,\n    height: 0,\n    value: []\n  }\n};\nexport const figureReduser = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_ADD_COMMAND_LINE:\n      return _objectSpread({}, state, {\n        commands: [action.payload, ...state.commands]\n      });\n\n    case ACTION_CREATE_CANVAS:\n      return _objectSpread({}, state, {\n        canvas: _objectSpread({}, state.canvas, {\n          height: action.payload.height,\n          width: action.payload.width\n        })\n      });\n\n    case ACTION_SET_CANVAS_VALUE:\n      return _objectSpread({}, state, {\n        canvas: _objectSpread({}, state.canvas, {\n          value: action.payload\n        })\n      });\n\n    case ACTION_SET_REQUEST_ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};","map":{"version":3,"sources":["D:/codeX/draw-app/src/store/reducers/reducer.js"],"names":["ACTION_ADD_COMMAND_LINE","ACTION_SET_CANVAS_VALUE","ACTION_CREATE_CANVAS","ACTION_SET_REQUEST_ERROR","initialState","commands","error","canvas","width","height","value","figureReduser","state","action","type","payload"],"mappings":";;;;;;AAAA,SACEA,uBADF,EAEEC,uBAFF,EAGEC,oBAHF,EAIEC,wBAJF,QAKO,wBALP;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,MAAM,EAAE,CAApB;AAAuBC,IAAAA,KAAK,EAAE;AAA9B;AAHW,CAArB;AAMA,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,uBAAL;AACE,+BAAYY,KAAZ;AAAmBP,QAAAA,QAAQ,EAAE,CAACQ,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACP,QAA1B;AAA7B;;AACA,SAAKH,oBAAL;AACA,+BACKU,KADL;AAEEL,QAAAA,MAAM,oBAAOK,KAAK,CAACL,MAAb;AAAqBE,UAAAA,MAAM,EAAEI,MAAM,CAACE,OAAP,CAAeN,MAA5C;AAAoDD,UAAAA,KAAK,EAAEK,MAAM,CAACE,OAAP,CAAeP;AAA1E;AAFR;;AAIA,SAAKP,uBAAL;AACA,+BACKW,KADL;AAEEL,QAAAA,MAAM,oBAAOK,KAAK,CAACL,MAAb;AAAqBG,UAAAA,KAAK,EAAEG,MAAM,CAACE;AAAnC;AAFR;;AAIA,SAAKZ,wBAAL;AACE,+BACKS,KADL;AAEEN,QAAAA,KAAK,EAAEO,MAAM,CAACE;AAFhB;;AAIJ;AACE,+BACKH,KADL;AAnBJ;AAuBD,CAxBM","sourcesContent":["import {\r\n  ACTION_ADD_COMMAND_LINE,\r\n  ACTION_SET_CANVAS_VALUE,\r\n  ACTION_CREATE_CANVAS,\r\n  ACTION_SET_REQUEST_ERROR,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  commands: [],\r\n  error: \"\",\r\n  canvas: { width: 0, height: 0, value: [] },\r\n};\r\n\r\nexport const figureReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION_ADD_COMMAND_LINE:\r\n      return { ...state, commands: [action.payload, ...state.commands] };\r\n      case ACTION_CREATE_CANVAS:\r\n      return {\r\n        ...state,\r\n        canvas: { ...state.canvas, height: action.payload.height, width: action.payload.width }\r\n      };\r\n      case ACTION_SET_CANVAS_VALUE:\r\n      return {\r\n        ...state,\r\n        canvas: { ...state.canvas, value: action.payload }\r\n      };\r\n      case ACTION_SET_REQUEST_ERROR:\r\n        return{\r\n          ...state,\r\n          error: action.payload\r\n        }\r\n    default:\r\n      return {\r\n        ...state\r\n      };\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}