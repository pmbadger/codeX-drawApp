{"ast":null,"code":"var _jsxFileName = \"D:\\\\codeX\\\\draw-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Inputes } from \"./components/Inputes\";\nimport { Canvas } from \"./components/Canvas\";\nimport Loading from \"react-loading-spinner\";\nimport { useSelector } from \"react-redux\";\nimport \"./App.css\";\nexport const App = () => {\n  const _useSelector = useSelector(state => state),\n        isFetching = _useSelector.isFetching;\n\n  return React.createElement(Loading, {\n    isLoading: isFetching,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"main-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Inputes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(Canvas, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["D:/codeX/draw-app/src/App.js"],"names":["React","Inputes","Canvas","Loading","useSelector","App","state","isFetching"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,WAAP;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA,uBACAD,WAAW,CAACE,KAAK,IAAIA,KAAV,CADX;AAAA,QACfC,UADe,gBACfA,UADe;;AAEvB,SACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEA,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAQD,CAVM","sourcesContent":["import React from \"react\";\nimport { Inputes } from \"./components/Inputes\";\nimport { Canvas } from \"./components/Canvas\";\nimport Loading from \"react-loading-spinner\";\nimport { useSelector } from \"react-redux\";\n\nimport \"./App.css\";\n\nexport const App = () => {\n  const { isFetching } = useSelector(state => state);\n  return (\n    <Loading isLoading={isFetching}>\n      <div className=\"main-body\">\n        <Inputes />\n        <Canvas />\n      </div>\n    </Loading>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}