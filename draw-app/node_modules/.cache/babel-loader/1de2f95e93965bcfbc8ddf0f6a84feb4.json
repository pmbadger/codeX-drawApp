{"ast":null,"code":"import _slicedToArray from \"D:\\\\codeX\\\\draw-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\codeX\\\\draw-app\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport { Lines } from \"./components/Lines\";\nimport { Canvas } from \"./components/Canvas\";\nimport { Rectangles } from \"./components/Rectangles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionAddLine } from \"./store/actions/lines\";\nimport { actionAddRectangle } from \"./store/actions/rectangles\";\nimport \"./App.css\";\nexport const App = () => {\n  const dispatch = useDispatch();\n\n  const addLine = () => dispatch(actionAddLine(null));\n\n  const addRectangle = () => dispatch(actionAddRectangle(null));\n\n  const changeCanvas = ({\n    width,\n    height\n  }) => dispatch(actionChangeCanvas(null));\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        widthCanvas = _useState2[0],\n        setWidthCanvas = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        heightCanvas = _useState4[0],\n        setHeightCanvas = _useState4[1];\n\n  function* generateSequence() {\n    yield 1;\n    yield 2;\n    return 3;\n  }\n\n  let generator = generateSequence();\n\n  for (i = 0; i < 5; i++) console.log(JSON.stringify(generator.next()));\n\n  return React.createElement(\"div\", {\n    className: \"main-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"inputes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Draw app\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Create your picture\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Enter size of canvas\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Width\",\n    onChange: e => setWidthCanvas(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Height\",\n    onChange: e => setHeightCanvas(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Lines, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"add-figure\",\n    onClick: addLine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-plus\",\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), \" Add new line\"), React.createElement(Rectangles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"add-figure\",\n    onClick: addRectangle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-plus\",\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), \" Add new rectangle\")), widthCanvas !== 0 && heightCanvas !== 0 ? React.createElement(Canvas, {\n    height: heightCanvas,\n    width: widthCanvas,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }) : null);\n};","map":{"version":3,"sources":["D:/codeX/draw-app/src/App.js"],"names":["React","useState","Lines","Canvas","Rectangles","useSelector","useDispatch","actionAddLine","actionAddRectangle","App","dispatch","addLine","addRectangle","changeCanvas","width","height","actionChangeCanvas","widthCanvas","setWidthCanvas","heightCanvas","setHeightCanvas","generateSequence","generator","i","console","log","JSON","stringify","next","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Lines } from \"./components/Lines\";\nimport { Canvas } from \"./components/Canvas\";\nimport { Rectangles } from \"./components/Rectangles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionAddLine } from \"./store/actions/lines\";\nimport { actionAddRectangle } from \"./store/actions/rectangles\";\n\nimport \"./App.css\";\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const addLine = () => dispatch(actionAddLine(null));\n  const addRectangle = () => dispatch(actionAddRectangle(null));\n  const changeCanvas = ({width, height}) => dispatch(actionChangeCanvas(null));\n  const [widthCanvas, setWidthCanvas] = useState(0);\n  const [heightCanvas, setHeightCanvas] = useState(0);\n\n  function* generateSequence() {\n    yield 1;\n    yield 2;\n    return 3;\n  }\n  \n  let generator = generateSequence();\n  \n\n  for(i=0; i<5; i++)  \n  console.log(JSON.stringify(generator.next()));\n\n  return (\n    <div className=\"main-body\">\n      <div className=\"inputes\">\n        <h1>Draw app</h1>\n        <p>Create your picture</p>\n        <p>Enter size of canvas</p>\n        <input\n          type=\"text\"\n          placeholder=\"Width\"\n          onChange={e => setWidthCanvas(e.target.value)}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"Height\"\n          onChange={e => setHeightCanvas(e.target.value)}\n        ></input>\n        <Lines />\n        <button className=\"add-figure\" onClick={addLine}>\n          <i className=\"fa fa-plus\" aria-hidden=\"true\"></i> Add new line\n        </button>\n        <Rectangles />\n        <button className=\"add-figure\" onClick={addRectangle}>\n          <i className=\"fa fa-plus\" aria-hidden=\"true\"></i> Add new rectangle\n        </button>\n      </div>\n      {widthCanvas !== 0 && heightCanvas !== 0 ? (\n        <Canvas height={heightCanvas} width={widthCanvas} />\n      ) : null}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}