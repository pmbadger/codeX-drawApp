{"ast":null,"code":"import { ACTION_ADD_COMMAND_LINE, ACTION_SET_CANVAS } from \"./actionTypes\";\nexport const actionAddCommandLine = line => dispatch => {\n  fetch(\"http://localhost:3001/command\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    },\n    body: JSON.stringify({\n      line\n    }) // mode: \"no-cors\"\n\n  }).then(result => result.json().then(data => {\n    // dispatch({\n    //   type: ACTION_ADD_COMMAND_LINE,\n    //   payload: line\n    // });\n    dispatch(actionSetCanvas(data));\n  })).catch(err => console.log(err));\n};\nexport const actionSetCanvas = data => {\n  return {\n    type: ACTION_SET_CANVAS,\n    payload: data\n  };\n};","map":{"version":3,"sources":["D:/codeX/draw-app/src/store/actions/commands.js"],"names":["ACTION_ADD_COMMAND_LINE","ACTION_SET_CANVAS","actionAddCommandLine","line","dispatch","fetch","method","headers","body","JSON","stringify","then","result","json","data","actionSetCanvas","catch","err","console","log","type","payload"],"mappings":"AAAA,SAASA,uBAAT,EAAkCC,iBAAlC,QAA2D,eAA3D;AAEA,OAAO,MAAMC,oBAAoB,GAAGC,IAAI,IAAIC,QAAQ,IAAI;AACtDC,EAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCC,IAAAA,MAAM,EAAE,MAD6B;AAErCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAF4B;AAKrCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA;AAAD,KAAf,CAL+B,CAMrC;;AANqC,GAAlC,CAAL,CAQGQ,IARH,CAQQC,MAAM,IACVA,MAAM,CAACC,IAAP,GAAcF,IAAd,CAAmBG,IAAI,IAAI;AACzB;AACA;AACA;AACA;AACAV,IAAAA,QAAQ,CAACW,eAAe,CAACD,IAAD,CAAhB,CAAR;AACD,GAND,CATJ,EAkBGE,KAlBH,CAkBSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAlBhB;AAmBD,CApBM;AAuBP,OAAO,MAAMF,eAAe,GAAID,IAAD,IAAU;AACvC,SAAO;AACLM,IAAAA,IAAI,EAAEnB,iBADD;AAELoB,IAAAA,OAAO,EAAEP;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { ACTION_ADD_COMMAND_LINE, ACTION_SET_CANVAS } from \"./actionTypes\";\r\n\r\nexport const actionAddCommandLine = line => dispatch => {  \r\n  fetch(\"http://localhost:3001/command\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json;charset=utf-8\"\r\n    },\r\n    body: JSON.stringify({line}),\r\n    // mode: \"no-cors\"\r\n  })\r\n    .then(result =>\r\n      result.json().then(data => {\r\n        // dispatch({\r\n        //   type: ACTION_ADD_COMMAND_LINE,\r\n        //   payload: line\r\n        // });\r\n        dispatch(actionSetCanvas(data));\r\n      })\r\n      \r\n    )\r\n    .catch(err => console.log(err));\r\n};\r\n\r\n\r\nexport const actionSetCanvas = (data) => {\r\n  return {\r\n    type: ACTION_SET_CANVAS,\r\n    payload: data\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}