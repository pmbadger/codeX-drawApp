{"ast":null,"code":"import _slicedToArray from \"D:\\\\codeX\\\\draw-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\codeX\\\\draw-app\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Canvas } from \"./components/Canvas\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionAddCommandLine } from \"./store/actions/lines\";\nimport { actionChangeCanvas } from \"./store/actions/canvas\"; // import { actionAddInputRectangle } from \"./store/actions/rectangles\";\n\nimport \"./App.css\";\nexport const App = () => {\n  const dispatch = useDispatch();\n\n  const addCommandLine = line => dispatch(actionAddCommandLine(line));\n\n  const changeCanvas = ({\n    width,\n    height\n  }) => dispatch(actionChangeCanvas({\n    width,\n    height\n  }));\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        widthCanvas = _useState2[0],\n        setWidthCanvas = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        heightCanvas = _useState4[0],\n        setHeightCanvas = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        valueTextArea = _useState6[0],\n        setValueTextArea = _useState6[1];\n\n  useEffect(() => {\n    changeCanvas({\n      width: widthCanvas,\n      height: heightCanvas\n    });\n  }, [widthCanvas, heightCanvas]);\n\n  const onChangeTextArea = str => {\n    if (str[str.length - 1] === \"\\n\") {\n      addCommandLine(str);\n      console.log(str);\n      str = \"\";\n    }\n\n    setValueTextArea(str);\n  }; // alert(document.body.clientWidth-250-25)\n\n\n  return React.createElement(\"div\", {\n    className: \"main-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"inputes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Draw app\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Create your picture\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Enter size of canvas, x\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Width\",\n    onChange: e => setWidthCanvas(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Height\",\n    onChange: e => setHeightCanvas(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"textarea\", {\n    type: \"text\",\n    placeholder: \"Enter commands\",\n    value: valueTextArea,\n    onChange: e => onChangeTextArea(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), widthCanvas !== \"\" && heightCanvas !== \"\" ? React.createElement(Canvas, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }) : null);\n};","map":{"version":3,"sources":["D:/codeX/draw-app/src/App.js"],"names":["React","useState","useEffect","Canvas","useSelector","useDispatch","actionAddCommandLine","actionChangeCanvas","App","dispatch","addCommandLine","line","changeCanvas","width","height","widthCanvas","setWidthCanvas","heightCanvas","setHeightCanvas","valueTextArea","setValueTextArea","onChangeTextArea","str","length","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Canvas } from \"./components/Canvas\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionAddCommandLine } from \"./store/actions/lines\";\nimport { actionChangeCanvas } from \"./store/actions/canvas\";\n// import { actionAddInputRectangle } from \"./store/actions/rectangles\";\n\nimport \"./App.css\";\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const addCommandLine = (line) => dispatch(actionAddCommandLine(line));\n  const changeCanvas = ({ width, height }) =>\n    dispatch(actionChangeCanvas({ width, height }));\n  const [widthCanvas, setWidthCanvas] = useState(\"\");\n  const [heightCanvas, setHeightCanvas] = useState(\"\");\n  const [valueTextArea, setValueTextArea] = useState(\"\")\n\n  useEffect(() => {\n    changeCanvas({ width: widthCanvas, height: heightCanvas });\n  }, [widthCanvas, heightCanvas]);\n\n  const onChangeTextArea = (str) => {\n    if(str[str.length-1]===\"\\n\"){\n      addCommandLine(str);\n      console.log(str);\n      str = \"\"\n    }\n    setValueTextArea(str);    \n  }\n\n  // alert(document.body.clientWidth-250-25)\n\n  return (\n    <div className=\"main-body\">\n      <div className=\"inputes\">\n        <h1>Draw app</h1>\n        <p>Create your picture</p>\n        <p>Enter size of canvas, x</p>\n        <input\n          type=\"text\"\n          placeholder=\"Width\"\n          onChange={e => setWidthCanvas(e.target.value)}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"Height\"\n          onChange={e => setHeightCanvas(e.target.value)}\n        ></input>\n        <textarea type=\"text\" placeholder='Enter commands' value= {valueTextArea} onChange={(e) => onChangeTextArea(e.target.value)}></textarea>\n      </div>\n      {widthCanvas !== \"\" && heightCanvas !== \"\" ? (\n        <Canvas />\n      ) : null}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}