{"ast":null,"code":"import _slicedToArray from \"D:\\\\codeX\\\\draw-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\codeX\\\\draw-app\\\\src\\\\components\\\\LineInputes.js\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"../App.css\";\nexport const LineInputes = () => {\n  const _useSelector = useSelector(state => state),\n        linesInput = _useSelector.linesInput;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const setValueFrom = (str, index) => {\n    console.log(str.placeholder);\n    setValues(values[index] = {\n      from: {\n        [str.placeholder]: str.value\n      }\n    });\n    console.log(values);\n  };\n\n  const setValueTo = (str, index) => {\n    setValues(values[index] = {\n      to: {\n        [str.placeholder]: str.value\n      }\n    });\n    console.log(values);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, linesInput.map((line, index) => React.createElement(\"div\", {\n    className: \"line-inputes\",\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Line \", index, \": \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"First point\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"X\",\n    onChange: e => setValueFrom(e.target, index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Y\",\n    onChange: e => setValueFrom(e.target, index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Second point\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"X\",\n    onChange: e => setValueTo(e.target, index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Y\",\n    onChange: e => setValueTo(e.target, index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))));\n};","map":{"version":3,"sources":["D:/codeX/draw-app/src/components/LineInputes.js"],"names":["React","useState","useSelector","LineInputes","state","linesInput","values","setValues","setValueFrom","str","index","console","log","placeholder","from","value","setValueTo","to","map","line","e","target"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,YAAP;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA,uBACRD,WAAW,CAACE,KAAK,IAAIA,KAAV,CADH;AAAA,QACvBC,UADuB,gBACvBA,UADuB;;AAAA,oBAEHJ,QAAQ,CAAC,EAAD,CAFL;AAAA;AAAA,QAExBK,MAFwB;AAAA,QAEhBC,SAFgB;;AAI/B,QAAMC,YAAY,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,WAAhB;AAEAN,IAAAA,SAAS,CAAED,MAAM,CAACI,KAAD,CAAN,GAAgB;AAAEI,MAAAA,IAAI,EAAE;AAAE,SAACL,GAAG,CAACI,WAAL,GAAmBJ,GAAG,CAACM;AAAzB;AAAR,KAAlB,CAAT;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACD,GALD;;AAOA,QAAMU,UAAU,GAAG,CAACP,GAAD,EAAMC,KAAN,KAAgB;AACjCH,IAAAA,SAAS,CAAED,MAAM,CAACI,KAAD,CAAN,GAAgB;AAAEO,MAAAA,EAAE,EAAE;AAAE,SAACR,GAAG,CAACI,WAAL,GAAmBJ,GAAG,CAACM;AAAzB;AAAN,KAAlB,CAAT;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACD,GAHD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,UAAU,CAACa,GAAX,CAAe,CAACC,IAAD,EAAOT,KAAP,KACd;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,GAAG,EAAEA,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAUA,KAAV,OADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,GAFd;AAGE,IAAA,QAAQ,EAAEU,CAAC,IAAIZ,YAAY,CAACY,CAAC,CAACC,MAAH,EAAWX,KAAX,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAQE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,GAA/B;AAAmC,IAAA,QAAQ,EAAEU,CAAC,IAAIZ,YAAY,CAACY,CAAC,CAACC,MAAH,EAAWX,KAAX,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,EAWE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,GAA/B;AAAmC,IAAA,QAAQ,EAAEU,CAAC,IAAIJ,UAAU,CAACI,CAAC,CAACC,MAAH,EAAWX,KAAX,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,GAA/B;AAAmC,IAAA,QAAQ,EAAEU,CAAC,IAAIJ,UAAU,CAACI,CAAC,CAACC,MAAH,EAAWX,KAAX,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADD,CADH,CADF;AAoBD,CAnCM","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"../App.css\";\r\n\r\nexport const LineInputes = () => {\r\n  const { linesInput } = useSelector(state => state);\r\n  const [values, setValues] = useState([]);\r\n\r\n  const setValueFrom = (str, index) => {\r\n    console.log(str.placeholder);\r\n\r\n    setValues((values[index] = { from: { [str.placeholder]: str.value } }));\r\n    console.log(values);\r\n  };\r\n\r\n  const setValueTo = (str, index) => {\r\n    setValues((values[index] = { to: { [str.placeholder]: str.value } }));\r\n    console.log(values);\r\n  };\r\n  return (\r\n    <div>\r\n      {linesInput.map((line, index) => (\r\n        <div className=\"line-inputes\" key={index}>\r\n          <h3>Line {index}: </h3>\r\n          <p>First point</p>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"X\"\r\n            onChange={e => setValueFrom(e.target, index)}\r\n          ></input>\r\n          <input type=\"text\" placeholder=\"Y\" onChange={e => setValueFrom(e.target, index)}\r\n          ></input>\r\n          <p>Second point</p>\r\n          <input type=\"text\" placeholder=\"X\" onChange={e => setValueTo(e.target, index)}></input>\r\n          <input type=\"text\" placeholder=\"Y\" onChange={e => setValueTo(e.target, index)}></input>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}